# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest
stages:
- stage: Build_Package
  jobs:
  - job: build_package
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
        
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: |
         **/*.jar
         Dockerfile
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
      
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: package'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: package
      condition: succeededOrFailed()
- stage: Build_Image
  dependsOn: Build_Package
  jobs:
  - job: build_image
    steps:
    - download: current
      artifact: package
    - task: Docker@2
      displayName: buildAndPush
      inputs:
        containerRegistry: 'Azure Container Registry'
        repository: azcoderegistry
        Dockerfile: '$(Pipeline.Workspace)/package/Dockerfile'
        buildContext: '$(Pipeline.Workspace)/package/target'
   
      
    
